name: Application CI/CD

on:
  # trigger when branch is created
  create:

  # Triggers the workflow on push or pull request events but only for the master or release branch
  push:
    branches:
      - master
      - release/**
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master
      - release/**
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

    
permissions:
  actions: read
  contents: read
  
jobs:
  
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_CONFIGURATION: Release
    
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Build
        run: dotnet build -c ${{ env.BUILD_CONFIGURATION }}

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Deploy
        id: deploy
        run: echo 'Deployed to dev'
        continue-on-error: true  #Setting to true so the deployment board can be updated, even if this fails
      - name: Update deployment board with all values provided
        continue-on-error: true                             # Setting to true so the job doesn't fail if updating the board fails.
        uses: im-open/update-deployment-board@v1.5.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN}}
          environment: dev
          board-number: 2
          ref: ${{ github.ref_name }}
          deploy-status: ${{ steps.deploy.outcome }}        # outcome is the result of the step before continue-on-error is applied
      - name: Now Fail the job if the deploy step failed
        if: steps.deploy.outcome == 'failure'
        run: exit 1

  deploy-qa:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: qa
    steps:
      - name: Deploy
        run: echo 'Deployed to dev'